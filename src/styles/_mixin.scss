@use 'sass:math';

$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1440;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1000;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 100;

$containerWidth: $maxWidthContainer + $containerPadding;

/* Percent */
@function percent($px, $from) {
  $result: math.div($px, $from) * 100%;

  @return $result;
}

/* REM */
@function rem($px) {
  $result: math.div($px, 16) + rem;

  @return $result;
}

/* EM */
@function em($px, $current: 16) {
  $result: math.div($px, $current) + em;

  @return $result;
}

/* Адаптивное свойство */

/* Currency */
@mixin currency($sym) {
  &::after {
    content: '#{$sym}';
  }
}

/*  Grids */

@mixin grid-cards($type: fit, $min: 280px, $max: 1fr, $gap: 30px) {
  display: grid;
  grid-template-columns: repeat(auto-#{$type}, minmax($min, $max));
  gap: $gap;
}

/* Адаптивное свойство (clamp) */

@mixin adaptive-value(
  $property,
  $start-size,
  $min-size,
  $width-from: $containerWidth,
  $width-to: $minWidth,
  $keep-size: 0
) {
  @if $start-size == 0 {
    $start-size: 0.0001;
  }

  @if $min-size == 0 {
    $min-size: 0.0001;
  }

  /*  Для calc(); */
  $add-size: math.div($start-size - $min-size, 16);

  @if $width-from == $containerWidth and $maxWidthContainer == 0 {
    $width-from: $maxWidth;
  }

  /*  Брейк-поинты в EM */
  $width-from-media: em($width-from);
  $width-to-media: em($width-to);

  /*   Формула плавающего значения
  Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/ */
  $slope: math.div(($start-size - $min-size), ($width-from - $width-to));
  $y-intersection: -$width-to * $slope + $min-size;

  @if $y-intersection == 0 {
    $y-intersection: 0.0001;
  }

  $fly-value: #{rem($y-intersection)}' + ' #{$slope * 100}vw;

  /* Получение значения свойства */
  $property-value: #{'clamp(' rem($min-size) ',' $fly-value ',' rem($start-size) ')'};

  /* Если отрицательные значения */

  @if $min-size > $start-size {
    $property-value: #{'clamp(' rem($start-size) ',' $flyValue ',' rem($min-size) ')'};
  }

  /* Если поддерживается clamp(); */
  @supports (#{$property}: $property-value) {
    #{$property}: $property-value;
  }

  /* Если не поддерживается clamp() */

  @supports not (#{$property}: $property-value) {
    #{$property}: calc(
      #{rem($min-size)} + #{$add-size} * (100vw - #{rem($width-to)}) / #{math.div($width-from, 16) -
        math.div($width-to, 16)}
    );
  }

  // Устанавливаем значения по умолчанию
  @if $width-from !=
    $containerWidth and
    $width-from !=
    $maxWidth and
    $keep-size !=
    1 and
    $keep-size !=
    2
  {
    @media (min-width: $widthFromMedia) {
      #{$property}: inherit;
    }
  }

  @if $width-to != $minWidth and $keep-size != 1 and $keep-size != 3 {
    @media (max-width: $widthToMedia) {
      #{$property}: inherit;
    }
  }
}
